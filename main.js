!function(){"use strict";function e(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var t=class{constructor(e,t){var s,i,r;s=this,r=()=>this._inputList.some((e=>!e.validity.valid)),(i=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(i="_hasInvalidInput"))in s?Object.defineProperty(s,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[i]=r,this._inputSelector=e.inputSelector,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._form=t,this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector)}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)}))}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}};class s{constructor(e,t){let{items:s,renderer:i}=e;this._renderedItems=s,this._renderer=i,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.append(t)}prepenedItem(e){this._container.prepend(e)}renderItems(){this._renderedItems.forEach((e=>{this.addItem(e)}))}}var i=class{constructor(e){this._popupElement=document.querySelector(`.${e}`),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},r=class extends i{constructor(e,t,s){super(e),this._handleFormSubmit=s,this._popupForm=this._popupElement.querySelector(".form"),this._submitButton=this._popupForm.querySelector(".form__button"),this._submitButtonText=t,this._popupInputs=this._popupForm.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._popupInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)}))}close(){this._popupForm.reset(),super.close()}showLoading(){this._submitButton.textContent="Saving..."}hideLoading(){this._submitButton.textContent=this._submitButtonText}};const n={inputSelector:".form__input",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled"},o=document.querySelector(".popup_type_edit-profile").querySelector(".form"),a=document.querySelector(".popup_type_add-card").querySelector(".form"),l=document.querySelector(".popup_type_edit-avatar").querySelector(".form"),h=document.querySelector(".profile__button-edit"),c=document.querySelector(".profile__button-add"),d=document.querySelector(".profile__change-avatar-button"),u=document.querySelector(".form__input_content_name"),_=document.querySelector(".form__input_content_job"),p=document.querySelector("#card").content;let m,v;const b=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(e.statusText)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}editUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}editUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"f3a40ce9-1f69-4ecd-ac6f-bd6bc99d92d1","Content-Type":"application/json"}}),f=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._name=document.querySelector(t),this._about=document.querySelector(s),this._avatar=document.querySelector(i)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}setAvatar(e){this._avatar.src=e.avatar}}({nameSelector:".profile__title",jobSelector:".profile__subtitle",avatarSelector:".profile__avatar-img"}),y=(t,s)=>{const i=new class{constructor(t,s,i,r){let{handleCardClick:n,handleDeleteCard:o,handleLikeIcon:a}=i;e(this,"removeCard",(()=>{this._element.remove(),this._element=null})),e(this,"_setEventListeners",(()=>{this._imageElement.addEventListener("click",(()=>this._handleCardClick(this._element))),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon(this._id)})),this._trashButton.addEventListener("click",(()=>{this._handleDeleteCard(this._id)}))})),this._title=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._cardSelector=s,this._handleCardClick=n,this._handleDeleteCard=o,this._handleLikeIcon=a,this._userId=r,this._ownerId=t.owner._id}isLiked(){return this._likes.some((e=>e._id===this._userId))}setLikes(e){this._likes=e,this._renderLikes()}_addLike(){this._likeButton.classList.add("card__button-like_liked")}_removeLike(){this._likeButton.classList.remove("card__button-like_liked")}_renderLikes(){this._likesCount.textContent=this._likes.length,this.isLiked()?this._addLike():this._removeLike()}generateCard(){return this._element=this._cardSelector.querySelector(".card").cloneNode(!0),this._likeButton=this._element.querySelector(".card__button-like"),this._imageElement=this._element.querySelector(".card__image"),this._trashButton=this._element.querySelector(".card__button-trash"),this._likesCount=this._element.querySelector(".card__likes-count"),this._cardTitle=this._element.querySelector(".card__title"),this._imageElement.src=this._link,this._imageElement.alt=this._title,this._cardTitle.textContent=this._title,this._likesCount.textContent=this._likes.length,this._setEventListeners(),this._ownerId!==this._userId&&(this._trashButton.style.display="none"),this._renderLikes(),this.isLiked()&&this._addLike(),this._element}}(t,p,{handleCardClick:()=>{S.open(t.name,t.link)},handleDeleteCard:e=>{g.open(),g.setAction((()=>{g.showLoading(),b.deleteCard(e).then((()=>{i.removeCard(),g.close()})).catch((e=>{console.log(e)})).finally((()=>{g.hideLoading()}))}))},handleLikeIcon:e=>{i.isLiked()?b.dislikeCard(e).then((e=>{i.setLikes(e.likes)})).catch((e=>{console.log(e)})):b.likeCard(e).then((e=>{i.setLikes(e.likes)})).catch((e=>{console.log(e)}))}},s);return i.generateCard()};Promise.all([b.getInitialCards(),b.getUserInfo()]).then((e=>{let[t,i]=e;v=i._id,f.setUserInfo({name:i.name,about:i.about}),f.setAvatar({avatar:i.avatar}),m=new s({items:t,renderer:e=>y(e,v)},".gallery"),m.renderItems()})).catch((e=>{console.log(e)}));const k=new r("popup_type_add-card","Save",(e=>(k.showLoading(),b.addCard(e).then((e=>{const t=y(e,v);m.prepenedItem(t),I.toggleButtonState(),k.close()})).catch((e=>{console.log(e)})).finally((()=>{k.hideLoading()})))));k.setEventListeners();const L=new r("popup_type_edit-avatar","Save",(e=>(L.showLoading(),b.editUserAvatar(e.link).then((()=>{f.setAvatar({avatar:e.link}),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.hideLoading()})))));L.setEventListeners();const E=new r("popup_type_edit-profile","Save",(e=>{E.showLoading(),b.editUserInfo(e).then((e=>{f.setUserInfo(e),E.close()})).catch((e=>{console.log(e)})).finally((()=>{E.hideLoading()}))}));E.setEventListeners();const S=new class extends i{constructor(e){super(e),this.popUpDescription=this._popupElement.querySelector(".popup__description"),this._image=this._popupElement.querySelector(".popup__image")}open(e,t){this.popUpDescription.textContent=e,this._image.src=t,this._image.alt=e,super.open()}}("popup_type_card");S.setEventListeners();const g=new class extends i{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".form"),this._submitButton=this._popupForm.querySelector(".form__button")}showLoading(){this._submitButton.textContent="Removing..."}hideLoading(){this._submitButton.textContent="Yes"}setAction(e){this._submitHandler=e}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._submitHandler()})),super.setEventListeners()}}("popup_type_delete-card-form");g.setEventListeners(),h.addEventListener("click",(()=>{const e=f.getUserInfo();var t,s;t=e.name,s=e.about,u.value=t,_.value=s,E.open(),C.resetValidation()})),c.addEventListener("click",(()=>{k.open(),I.resetValidation(),I.toggleButtonState()})),d.addEventListener("click",(()=>{L.open(),q.resetValidation(),q.toggleButtonState()}));const C=new t(n,o);C.enableValidation();const I=new t(n,a);I.enableValidation();const q=new t(n,l);q.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,